=============================
NUMERIC DATA TYPES WITH MYSQL
=============================
INT  - whole numbers

DECIMAL - DECIMAL(5, 2) => 356.25
        - first argument is TOTAL number of digits
        - second argument represents digits AFTER the decimal point
        - if you create a table that exceeds the maximum number allowed, mySQL will store the highest value it can store given the constraints you setup.
        Example: you entered VALUES(7987654987654687) => mySQL will store 999.99
        - it also round up. 1.99 => mySQL will store 2.00

FLOAT AND DOUBLE - are approximate while decimal are EXACT
=================

So why use them if they're not exact?
Answer:  Floats/Double can store larger numbers using less space in memory that decimal cannot BUT it comes at the cost of precision

It's better to use DOUBLE if you want more precision if you had to choose.

==============
DATES AND TIMES
===============
DATE - stores values with a date but no time 'YYYY-MM-DD'
TIME - stores values with a time but no date 'HH:MM:SS'
DATETIME - stores values with a date AND time 'YYYY-MM-DD HH:MM:SS'
         - commonly used

CURDATE() - gives current date
CURTIME() - gives current time
NOW() - gives current datetime, commonly used

INSERT INTO people(birthdate, birthtime, birth_dt)
VALUES('Microwave', CURDATE(), CURTIME(), NOW());

============================
FORMATTING DATES (and times)
=============================
DAY() - gives you the number of day. 1 - 31
DAYNAME() - gives you the name of day. Monday, tuesday, wednesday etc..
DAYOFWEEK() - gives you number of week. Ex. 6 = Friday, 1 = sunday
DAYOFYEAR() - gives you number of day of year out of 365 takes into account leap years

What if we want => "April 21 2017"

CONCAT(MONTHNAME(birthdate), ' ', DAY(birthdate), ' ', YEAR(birthdate));
it's messy.. yikes

BETTER SOLUTION => DATE_FORMAT(date, format)
-- check docs for specifiers
DATE_FORMAT(birth_dt, '%M %d %Y') => Yay!

==========
DATE MATH
==========
DATEDIFF() - gives you number of days
DATE_ADD(date, INTERVAL expr unit)

==========
TIMESTAMPS
==========




salary --> employees

employees --> salary





























